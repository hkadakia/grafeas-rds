// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/theparanoids/grafeas-rds/go/v1beta1/storage (interfaces: ConnPoolMgr)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockConnPoolMgr is a mock of ConnPoolMgr interface.
type MockConnPoolMgr struct {
	ctrl     *gomock.Controller
	recorder *MockConnPoolMgrMockRecorder
}

// MockConnPoolMgrMockRecorder is the mock recorder for MockConnPoolMgr.
type MockConnPoolMgrMockRecorder struct {
	mock *MockConnPoolMgr
}

// NewMockConnPoolMgr creates a new mock instance.
func NewMockConnPoolMgr(ctrl *gomock.Controller) *MockConnPoolMgr {
	mock := &MockConnPoolMgr{ctrl: ctrl}
	mock.recorder = &MockConnPoolMgrMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnPoolMgr) EXPECT() *MockConnPoolMgrMockRecorder {
	return m.recorder
}

// SetConnMaxIdleTime mocks base method.
func (m *MockConnPoolMgr) SetConnMaxIdleTime(arg0 time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetConnMaxIdleTime", arg0)
}

// SetConnMaxIdleTime indicates an expected call of SetConnMaxIdleTime.
func (mr *MockConnPoolMgrMockRecorder) SetConnMaxIdleTime(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetConnMaxIdleTime", reflect.TypeOf((*MockConnPoolMgr)(nil).SetConnMaxIdleTime), arg0)
}

// SetConnMaxLifetime mocks base method.
func (m *MockConnPoolMgr) SetConnMaxLifetime(arg0 time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetConnMaxLifetime", arg0)
}

// SetConnMaxLifetime indicates an expected call of SetConnMaxLifetime.
func (mr *MockConnPoolMgrMockRecorder) SetConnMaxLifetime(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetConnMaxLifetime", reflect.TypeOf((*MockConnPoolMgr)(nil).SetConnMaxLifetime), arg0)
}

// SetMaxIdleConns mocks base method.
func (m *MockConnPoolMgr) SetMaxIdleConns(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMaxIdleConns", arg0)
}

// SetMaxIdleConns indicates an expected call of SetMaxIdleConns.
func (mr *MockConnPoolMgrMockRecorder) SetMaxIdleConns(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMaxIdleConns", reflect.TypeOf((*MockConnPoolMgr)(nil).SetMaxIdleConns), arg0)
}

// SetMaxOpenConns mocks base method.
func (m *MockConnPoolMgr) SetMaxOpenConns(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMaxOpenConns", arg0)
}

// SetMaxOpenConns indicates an expected call of SetMaxOpenConns.
func (mr *MockConnPoolMgrMockRecorder) SetMaxOpenConns(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMaxOpenConns", reflect.TypeOf((*MockConnPoolMgr)(nil).SetMaxOpenConns), arg0)
}
